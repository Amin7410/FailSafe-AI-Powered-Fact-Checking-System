version: '3.8'

services:
  # FailSafe Backend API
  failsafe-backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production
    container_name: failsafe-backend
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/app
      - ENVIRONMENT=production
    volumes:
      - ./backend/data:/app/data
      - ./backend/logs:/app/logs
    networks:
      - failsafe-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # FailSafe Frontend
  failsafe-frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: failsafe-frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
    depends_on:
      - failsafe-backend
    networks:
      - failsafe-network
    restart: unless-stopped

  # Redis Cache (optional, for production)
  redis:
    image: redis:7-alpine
    container_name: failsafe-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - failsafe-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # Nginx Reverse Proxy (optional, for production)
  nginx:
    image: nginx:alpine
    container_name: failsafe-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - failsafe-backend
      - failsafe-frontend
    networks:
      - failsafe-network
    restart: unless-stopped

networks:
  failsafe-network:
    driver: bridge

volumes:
  redis_data:
    driver: local
